name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT" 

    - name: Clone VCPKG 
      run: git clone https://github.com/microsoft/vcpkg.git 

    - name: Bootstrap vcpkg (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd ./vcpkg
        ./bootstrap-vcpkg.sh
        cd ..

    - name: Bootstrap vcpkg (Windows)
      if: runner.os == 'Windows'
      run: |
        cd vcpkg
        .\bootstrap-vcpkg.bat
        cd ..

    - name: Install X11 development libraries
      if: runner.os != 'Windows'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libx11-dev \
          libxrandr-dev \
          libxinerama-dev \
          libxcursor-dev \
          libxi-dev \
          libgl1-mesa-dev \
          libxext-dev \
          libxfixes-dev \
          libxrender-dev \
          libxss-dev \
          libxt-dev \
          libxau-dev \
          libxdmcp-dev

    - name: Install Packages (Linux/macOS) 
      if: runner.os != 'Windows'
      run: ./vcpkg/vcpkg install glad glfw3 glm

    - name: Install Packages (Windows) 
      if: runner.os == 'Windows'
      run: .\vcpkg\vcpkg.exe install glad glfw3 glm

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }} -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
